spring.application.name=back

# -----------------------------
# 🌐 서버 설정
# -----------------------------
server.port=8082
server.servlet.context-path=/

# -----------------------------
# 🗄️ 데이터베이스 설정 (MySQL)
# -----------------------------
spring.datasource.url=jdbc:mysql://project-db-campus.smhrd.com:3312/Insa6_aiservice_p3_4?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&connectTimeout=10000&socketTimeout=15000&tcpKeepAlive=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# -----------------------------
# 🧱 JPA 설정
# -----------------------------
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
# Hibernate dialect 자동 감지 → 직접 지정 필요 없음 (3.5.x)
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# -----------------------------
# 🧠 Perso.ai API 설정
# -----------------------------
perso.base-url=https://live-api.perso.ai
perso.api-key=${PERSO_API_KEY}
perso.webhook-url=http://localhost:8082/api/translations/perso/webhook

# -----------------------------
# 🔊 Azure API 설정 (추후 발음 평가용)
# -----------------------------
azure.speech.key=${AZURE_SPEECH_KEY}
azure.speech.region=${AZURE_SPEECH_REGION}

# -----------------------------
# 💾 로컬 파일 저장 루트
# -----------------------------
storage.root-dir=C:/Users/aischool/Desktop/secret/contents

# -----------------------------
# 🌐 OAuth2 소셜 로그인 설정
# -----------------------------

# ✅ Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8082/login/oauth2/code/google

# ✅ Kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8082/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
